{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Link","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","props","color","contacts","link","icon","FaGithub","FaFacebook","FaTwitter","FaLinkedin","ContactPage","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","map","_ref","Icon","key","href","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","Container","styled_base_browser_esm","name","styles","ListDropDown","LinkToggle","DropDownMenu","ListLink","core_browser_esm","style","display","marginRight","gatsby_browser_entry","to","children","Header","siteTitle","_useState","useState","showMenu","setShowMenu","textShadow","backgroundImage","listStyle","float","header_ListLink","onClick","defaultProps","Content","Footer","Layout","data","_856328897","react_default","a","Fragment","header","site","siteMetadata","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat"],"mappings":"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","file":"component---src-pages-contact-js-f4d19ae60b4ec9b30cbf.js","sourcesContent":["import React from \"react\"\nimport { FaFacebook, FaGithub, FaTwitter, FaLinkedin } from \"react-icons/fa\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Link = styled.a`\n  svg {\n    font-size: 100px;\n    fill: ${props => props.color || 'black'};\n  }\n`\n\nconst contacts = [{\n  link: 'https://github.com/ak1103dev',\n  icon: FaGithub,\n  color: 'black',\n}, {\n  link: 'https://www.facebook.com/aphichan.chaiyutthasart',\n  icon: FaFacebook,\n  color: '#4367B2',\n}, {\n  link: 'https://twitter.com/ak1103dev',\n  icon: FaTwitter,\n  color: '#1CA1F1',\n}, {\n  link: 'https://www.linkedin.com/in/apichan-chaiyutthasat-897172171/',\n  icon: FaLinkedin,\n  color: '#0177B5',\n}]\n\nconst ContactPage = () => (\n  <Layout>\n    <SEO title=\"Contact\" />\n    <h1>Contact</h1>\n    {\n      contacts.map(({ icon: Icon, link, color }) => (\n        <Link key={link} href={link} target=\"_blank\" color={color}>\n          <Icon />\n        </Link>\n      ))\n    }\n  </Layout>\n)\n\nexport default ContactPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.header`\n  background: rgb(70, 89, 39);\n  margin-bottom: 1.45rem;\n  padding: 10px;\n  a {\n    color: white;\n  }\n`\nconst ListDropDown = styled.li`\n  display: inline-block;\n  margin-right: 1rem;\n`\nconst LinkToggle = styled.a`\n  text-decoration: underline;\n  cursor: pointer;\n  &::after {\n    display: inline-block;\n    width: 0;\n    height: 0;\n    margin-left: .255em;\n    vertical-align: .255em;\n    content: \"\";\n    border-top: .3em solid;\n    border-right: .3em solid transparent;\n    border-bottom: 0;\n    border-left: .3em solid transparent;\n  }\n`\nconst DropDownMenu = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 10px;\n  >a {\n    color: #444;\n  }\n`\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => {\n  const [showMenu, setShowMenu] = useState(false)\n  return (\n    <Container>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n        <h3 style={{ display: `inline` }}>AK1103DEV</h3>\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right`, display: 'flex' }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListDropDown>\n          <LinkToggle onClick={() => setShowMenu(!showMenu)}>Donation</LinkToggle>\n          {\n            showMenu &&\n            <DropDownMenu>\n              <Link to=\"/donation/\">Donation</Link>\n              <Link to=\"/confirm-payment/\">Confirm Payment</Link>\n            </DropDownMenu>\n          }\n        </ListDropDown>\n        <ListLink to=\"/contact/\">Contact</ListLink>\n      </ul>\n    </Container>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0px 1.0875rem 1.45rem;\n  padding-top: 0;\n  main {\n    min-height: calc(100vh - 200px);\n  }\n`\nconst Footer = styled.footer`\n  border-top: 1px solid #333;\n  padding-top: 20px;\n  text-align: center;\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Content>\n        <main>{children}</main>\n        <Footer>\n          © {new Date().getFullYear()}, Built by AK1103DEV\n        </Footer>\n      </Content>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}