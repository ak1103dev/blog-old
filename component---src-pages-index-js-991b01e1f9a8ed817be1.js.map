{"version":3,"sources":["webpack:///./src/utils/typography.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","rhythm","scale","options","query","IndexPage","_ref3","data","Object","core_browser_esm","layout","seo","title","allMarkdownRemark","totalCount","edges","map","_ref4","node","key","id","gatsby_browser_entry","to","fields","slug","css","_ref","frontmatter","_ref2","date","excerpt","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","Container","styled_base_browser_esm","target","name","styles","ListDropDown","LinkToggle","DropDownMenu","List","ListLink","props","style","display","marginRight","children","Header","siteTitle","_useState","useState","showMenu","setShowMenu","textShadow","backgroundImage","header_ListLink","onClick","defaultProps","Content","Footer","Layout","_856328897","react_default","a","Fragment","header","site","siteMetadata","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat"],"mappings":"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","file":"component---src-pages-index-js-991b01e1f9a8ed817be1.js","sourcesContent":["import Typography from \"typography\"\nconst typography = new Typography({\n  baseFontSize: \"18px\",\n  baseLineHeight: 1.666,\n  headerFontFamily: [\n    \"Avenir Next\",\n    \"Helvetica Neue\",\n    \"Segoe UI\",\n    \"Helvetica\",\n    \"Arial\",\n    \"sans-serif\",\n  ],\n  bodyFontFamily: [\"Georgia\", \"serif\"],\n})\n\nexport const { scale, rhythm, options } = typography\nexport default typography\n","import React from \"react\"\nimport { graphql, Link } from 'gatsby'\nimport { css } from \"@emotion/core\"\n\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <div key={node.id}>\n        <Link\n          to={node.fields.slug}\n          css={css`\n            text-decoration: none;\n            color: inherit;\n          `}\n        >\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(1 / 4)};\n            `}\n          >\n            {node.frontmatter.title}{\" \"}\n            <span\n              css={css`\n                color: #bbb;\n              `}\n            >\n              â€” {node.frontmatter.date}\n            </span>\n          </h3>\n          <p>{node.excerpt}</p>\n        </Link>\n      </div>\n    ))}\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.header`\n  background: rgb(70, 89, 39);\n  margin-bottom: 1.45rem;\n  padding: 10px;\n  a {\n    color: white;\n  }\n  /* display: flex; */\n  /* justify-content: space-between; */\n`\nconst ListDropDown = styled.li`\n  display: inline-block;\n  margin-right: 1rem;\n`\nconst LinkToggle = styled.a`\n  text-decoration: underline;\n  cursor: pointer;\n  &::after {\n    display: inline-block;\n    width: 0;\n    height: 0;\n    margin-left: .255em;\n    vertical-align: .255em;\n    content: \"\";\n    border-top: .3em solid;\n    border-right: .3em solid transparent;\n    border-bottom: 0;\n    border-left: .3em solid transparent;\n  }\n`\nconst DropDownMenu = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 10px;\n  >a {\n    color: #444;\n  }\n`\nconst List = styled.ul`\n  listStyle: none;\n  display: flex;\n  float: right;\n  @media (max-width: 768px) {\n    float: none;\n    margin-bottom: 0;\n  }\n`\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => {\n  const [showMenu, setShowMenu] = useState(false)\n  return (\n    <Container>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n        <h3 style={{ display: `inline` }}>AK1103DEV</h3>\n      </Link>\n      <List>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListDropDown>\n          <LinkToggle onClick={() => setShowMenu(!showMenu)}>Donation</LinkToggle>\n          {\n            showMenu &&\n            <DropDownMenu>\n              <Link to=\"/donation/\">Donation</Link>\n              <Link to=\"/confirm-payment/\">Confirm Payment</Link>\n            </DropDownMenu>\n          }\n        </ListDropDown>\n        <ListLink to=\"/contact/\">Contact</ListLink>\n      </List>\n    </Container>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0px 1.0875rem 1.45rem;\n  padding-top: 0;\n  main {\n    min-height: calc(100vh - 200px);\n  }\n`\nconst Footer = styled.footer`\n  border-top: 1px solid #333;\n  padding-top: 20px;\n  text-align: center;\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Content>\n        <main>{children}</main>\n        <Footer>\n          Â© {new Date().getFullYear()}, Built by AK1103DEV\n        </Footer>\n      </Content>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}